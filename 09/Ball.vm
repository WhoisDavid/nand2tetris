function Ball.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push argument 3
pop static 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 0
pop this 3
push argument 1
pop this 4
push argument 2
pop this 5
push argument 4
pop this 7
push argument 5
pop this 8
push argument 6
pop this 9
push constant 0
pop this 10
push constant 0
pop this 11
push pointer 0
call Ball.getRadius 1
pop this 6
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.getDepth 0
push argument 0
pop pointer 0
push this 5
return
function Ball.getFrameX 0
push argument 0
pop pointer 0
push this 10
return
function Ball.getFrameY 0
push argument 0
pop pointer 0
push this 11
return
function Ball.increaseVelocity 0
push argument 0
pop pointer 0
push this 7
push constant 1
add
pop this 7
push this 8
push constant 1
add
pop this 8
push this 9
push constant 2
add
pop this 9
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 2
push argument 0
pop pointer 0
push this 10
push this 11
call Scene.drawCenteredShallowRectangle 2
pop temp 0
push this 3
push this 4
push this 6
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.projection 5
push argument 0
pop pointer 0
push constant 8
pop local 0
call Scene.getXMax 0
push local 0
call Math.divide 2
pop local 1
push this 10
push local 1
call Math.multiply 2
push this 0
push local 1
call Math.multiply 2
add
push constant 2
push this 10
push local 0
call Math.divide 2
call Math.multiply 2
push this 0
call Math.multiply 2
sub
pop local 2
push local 2
push local 1
call Math.divide 2
pop local 2
push this 11
push local 1
call Math.multiply 2
push this 1
push local 1
call Math.multiply 2
add
push constant 2
push this 10
push local 0
call Math.divide 2
call Math.multiply 2
push this 1
call Math.multiply 2
sub
pop local 3
push local 3
push local 1
call Math.divide 2
pop local 3
push this 6
push constant 2
call Math.divide 2
pop local 4
push local 2
push this 3
sub
push local 4
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push local 4
add
pop this 3
goto IF_END0
label IF_FALSE0
push this 3
push local 2
sub
push local 4
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push local 4
sub
pop this 3
goto IF_END1
label IF_FALSE1
push local 2
pop this 3
label IF_END1
label IF_END0
push local 3
push this 4
sub
push local 4
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push local 4
add
pop this 4
goto IF_END2
label IF_FALSE2
push this 4
push local 3
sub
push local 4
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push local 4
sub
pop this 4
goto IF_END3
label IF_FALSE3
push local 3
pop this 4
label IF_END3
label IF_END2
call Scene.getXMax 0
push this 10
sub
push this 6
sub
push this 3
push this 10
push this 6
add
call Math.max 2
call Math.min 2
pop this 3
call Scene.getYMax 0
push this 11
sub
push this 6
sub
push this 4
push this 11
push this 6
add
call Math.max 2
call Math.min 2
pop this 4
push constant 0
return
function Ball.getRadius 0
push argument 0
pop pointer 0
push static 0
call Scene.getXMax 0
push constant 2
push this 10
call Math.multiply 2
sub
call Math.multiply 2
call Scene.getXMax 0
call Math.divide 2
return
function Ball.move 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push pointer 0
call Ball.hide 1
pop temp 0
push pointer 0
call Ball.getRadius 1
pop this 6
push this 0
push this 7
add
push this 6
sub
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
neg
pop this 7
push this 6
pop this 0
push constant 0
not
pop local 0
label IF_FALSE0
push this 0
push this 7
add
push this 6
add
call Scene.getXMax 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 7
neg
pop this 7
call Scene.getXMax 0
push this 6
sub
pop this 0
push constant 0
not
pop local 0
label IF_FALSE1
push this 1
push this 8
add
push this 6
sub
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 8
neg
pop this 8
push this 6
pop this 1
push constant 0
not
pop local 1
label IF_FALSE2
push this 1
push this 8
add
push this 6
add
call Scene.getYMax 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 8
neg
pop this 8
call Scene.getYMax 0
push this 6
sub
pop this 1
push constant 0
not
pop local 1
label IF_FALSE3
push this 5
push this 9
add
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 9
neg
pop this 9
push constant 0
pop this 5
push constant 0
not
pop local 2
push constant 0
pop this 10
push constant 0
pop this 11
label IF_FALSE4
push this 5
push this 9
add
call Scene.getOpponentXMax 0
gt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 9
neg
pop this 9
call Scene.getOpponentXMax 0
pop this 5
push constant 0
not
pop local 2
call Scene.getOpponentXMax 0
pop this 10
call Scene.getOpponentYMax 0
pop this 11
label IF_FALSE5
push local 0
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
push this 7
add
pop this 0
label IF_FALSE6
push local 1
not
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 1
push this 8
add
pop this 1
label IF_FALSE7
push local 2
not
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 5
push this 9
add
pop this 5
push this 10
push this 9
add
pop this 10
push this 11
push this 9
call Scene.getXMax 0
call Scene.getYMax 0
call Math.divide 2
call Math.divide 2
add
pop this 11
label IF_FALSE8
push pointer 0
call Ball.projection 1
pop temp 0
push pointer 0
call Ball.show 1
pop temp 0
push constant 0
return
function Ball.intersect 0
push argument 0
pop pointer 0
push this 3
push this 6
add
push argument 1
lt
push this 3
push this 6
sub
push argument 3
gt
or
push this 4
push this 6
add
push argument 2
lt
or
push this 4
push this 6
sub
push argument 4
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
goto IF_END0
label IF_FALSE0
push constant 0
not
return
label IF_END0
function Ball.intersectBat 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Bat.getX1 1
push argument 1
call Bat.getY1 1
push argument 1
call Bat.getX2 1
push argument 1
call Bat.getY2 1
call Ball.intersect 5
return
